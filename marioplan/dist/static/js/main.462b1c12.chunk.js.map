{"version":3,"sources":["components/layout/SignedInLinks.js","store/action/authAction.js","components/layout/SignedOutLinks.js","components/layout/navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notification.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/action/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","authIsLoaded","isLoaded","link","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createAt","toDate","calendar","ProjectList","projects","map","id","key","Notification","notifications","notification","user","content","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","ownProps","match","params","data","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authErr","onSubmit","htmlFor","onChange","authError","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","SignUp","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","authID","add","authorID","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.462b1c12.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/action/authAction'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_FAIL', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        ).catch((err) => dispatch({ type: 'SIGNUP_ERROR', err }));\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/signup'>Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, authIsLoaded, profile } = props;\r\n    const link = auth.uid ? <SignedInLinks profile={profile}></SignedInLinks> : <SignedOutLinks></SignedOutLinks>\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                {authIsLoaded ? link : <span></span>}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authIsLoaded: state.firebase.auth && state.firebase.auth.isLoaded,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    const { notifications } = props;\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-title\">Notifications</div>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(notification => {\r\n                            return <li key={notification.id}>\r\n                                <span className=\"pink-text\">{notification.user}</span>\r\n                                <span>{notification.content}</span>\r\n                                <div className=\"grey-text note-date\"></div>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notification'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, authIsLoaded, notifications } = this.props;\r\n    console.log('notifications : ',notifications);\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (!authIsLoaded) return <span></span>\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    authIsLoaded: state.firebase.auth && state.firebase.auth.isLoaded,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(() => ['projects',{ collection: 'notifications', limit: 3 }])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    \r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>7th December , 7am</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects\r\n    const project = projects && projects[id] ;\r\n    \r\n    return {\r\n        project : project,\r\n        auth: state.firebase.auth \r\n    }\r\n  }\r\n  \r\n  export default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(() => ['projects'])\r\n  )(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/action/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        'email': '',\r\n        'password': ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authErr, auth, authIsLoaded } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        if (!authIsLoaded) return <span></span>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign In\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authErr ? <p>{authErr}</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authErr: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        authIsLoaded: state.firebase.auth && state.firebase.auth.isLoaded\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/action/authAction'\r\n\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        'email': '',\r\n        'password': '',\r\n        'firstName': '',\r\n        'lastName': ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authIsLoaded } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        if (!authIsLoaded) return <span></span>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign Up\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authIsLoaded: state.firebase.auth && state.firebase.auth.isLoaded,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/action/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const profile = getState().firebase.profile;\r\n    const authID = getState().firebase.auth.uid;\r\n    console.log(profile);\r\n    const firestore = getFirestore();\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorID: authID,\r\n      createAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    })\r\n\r\n  }\r\n};","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard}></Route>\n          <Route path='/project/:id' component={ProjectDetails}></Route>\n          <Route path='/Signin' component={SignIn}/>\n          <Route path='/SignUp' component={SignUp}/>\n          <Route path='/Create' component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_FAIL':\r\n            console.log('login failed');\r\n            return {\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects:[\r\n        {id: '1', title: 'help me find the peach', content:'blah blah blah'},\r\n        {id: '2', title: 'collect all the start', content:'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with Huy', content:'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type)\r\n    {\r\n        case 'CREATE_PROJECT':\r\n            console.log('create project',action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBWJpG59w0di8qmyy5KUlp9IQP-3uMq3X0\",\r\n    authDomain: \"huy-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://huy-marioplan.firebaseio.com\",\r\n    projectId: \"huy-marioplan\",\r\n    storageBucket: \"huy-marioplan.appspot.com\",\r\n    messagingSenderId: \"895820309747\",\r\n    appId: \"1:895820309747:web:711eb836fca0996374c386\",\r\n    measurementId: \"G-8M0QTHCT12\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport 'firebase/functions'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n  }\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n    \n);\nserviceWorker.unregister();\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}